@model IEnumerable<TomorrowsLunch.Models.Ingredient>
@{
    IEnumerable<TomorrowsLunch.Models.Meal> meals = ViewBag.Meals;
}
@using Newtonsoft.Json

<section class="wrapper style5">
    <div class="inner">
        <section id="createSection">
            @using (Html.BeginForm("Create", "Meal", FormMethod.Post, new { id = "mealCreateForm" }))
            {
                <div id="createFormDiv" style="display:none">
                    <div class="6u 12u$(xsmall)">
                        <input type="text" name="name" id="name" value="" placeholder="Naziv jela" />
                        <br />
                        <h5>Sastojci</h5>
                        <ul id="ingredients"></ul>
                        <a onclick="return newIngredient()" class="button small icon fa-plus">Novi sastojak</a>
                        <a id="removeIngredientButton" style="display:none" onclick="return removeIngredient()" class="button small icon fa-remove">Ukloni sastojak</a>
                    </div>
                    <br />
                    <div class="12u$">
                        <ul class="actions">
                            <li><a href="javascript:document.forms['mealCreateForm'].submit()" onclick="return validateForm()" class="button special icon fa-plus">Dodaj jelo</a></li>
                            <li><a onclick="return toggleForm()" class="button special icon fa-arrow-left">Odustani</a></li>
                        </ul>
                    </div>
                </div>
            }
            <div class="12u$" id="buttonDiv">
                <ul class="actions">
                    <li><a onclick="return toggleForm()" class="button special icon fa-plus">Dodaj jelo</a></li>
                </ul>
            </div>
        </section>
        <section id="editSection">
            @using (Html.BeginForm("Edit", "Meal", FormMethod.Post, new { id = "mealEditForm" }))
            {
                <div id="editFormDiv" style="display:none">
                    <div class="6u 12u$(xsmall)">
                        <input type="text" name="nameEdit" id="nameEdit" value="" placeholder="Naziv jela" />
                        <input style="visibility:hidden;height:0px" type="text" name="id" id="idEdit" value="" />
                        <br />
                        <h5>Sastojci</h5>
                        <ul id="ingredients"></ul>
                        <a onclick="return newIngredient()" class="button small icon fa-plus">Novi sastojak</a>
                        <a id="removeIngredientButton" style="display:none" onclick="return removeEditIngredient()" class="button small icon fa-remove">Ukloni sastojak</a>
                    </div>
                    <br />
                    <div class="12u$">
                        <ul class="actions">
                            <li><a href="javascript:document.forms['mealEditForm'].submit()" onclick="return validateEditForm()" class="button special icon fa-plus">Uredi jelo</a></li>
                            <li><a onclick="return closeEditForm()" class="button special icon fa-arrow-left">Odustani</a></li>
                        </ul>
                    </div>
                </div>
            }
        </section>
        <section>
            <h4>Jela</h4>
            <div class="table-wrapper">
                <table>
                    <thead>
                        <tr>
                            <th>Naziv jela</th>
                            <th>Sastojci</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in meals)
                        {
                            <tr>
                                <td>@item.Name</td>
                                <td>
                                    <div class="select-wrapper">
                                        <select>
                                            @foreach (var mealIngredientQuantity in item.MealIngredientQuantites)
                                            {
                                                <option disabled="disabled">@mealIngredientQuantity.IngredientName</option>
                                            }
                                        </select>
                                    </div>
                                </td>
                                @*<td>
                                    <a onclick="populateAndShowForm('@item.Name', '@item.Id', '@foreach (var ingredient in item.MealIngredientQuantites) {@String.Format("{{\"ingredientName\":\""); @ingredient.IngredientName; @String.Format("\",\"quantity\":\""); @ingredient.Quantity; @String.Format("\"}},");}')" class="button small icon fa-edit">Uredi</a>
                                </td>*@
                                <td>
                                    <a href="@Url.Action("Delete", "Meal", new { id=item.Id })" class="button small icon fa-remove">Obriši</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </section>
    </div>
</section>
<script>
    document.getElementById("nav").style.visibility = "inherit";
    var ingredientsList = document.getElementById('ingredients');
    var ingredients = @Html.Raw(Json.Encode(Model));
    counter = 1;

    function newIngredient() {
        var entry = document.createElement('li');
        var selectList = document.createElement("select");
        selectList.id = "ingredient_"+ counter;
        selectList.name = "ingredient_"+ counter;
        selectList.style.display = "inline";
        selectList.style.width = "inherit";
        entry.appendChild(selectList);
        var option = document.createElement("option");
        option.value = "-1";
        option.text = "-Odaberi sastojak-";
        selectList.appendChild(option);

        for (var i = 0; i < ingredients.length; i++) {
            var option = document.createElement("option");
            option.value = ingredients[i].Id;
            option.text = ingredients[i].Name;
            selectList.appendChild(option);
        }

        var quantity = document.createElement("input");
        quantity.type = "text";
        quantity.id = "ingredient_"+ counter + "_q";
        quantity.name = "ingredient_"+ counter + "_q";
        quantity.onkeypress =function(){return event.charCode >= 48 && event.charCode <= 57};
        quantity.style.display = "inline";
        quantity.style.width = "28%";
        quantity.style.marginLeft = "5%";
        quantity.style.marginBottom = "1%";
        quantity.placeholder = "količina (g)";

        entry.appendChild(quantity);
        ingredientsList.appendChild(entry);
        if (counter==1) {
            document.getElementById("removeIngredientButton").style.display = "inline-block";
        }
        counter++;
    }
    function removeIngredient(){
        if (counter>1) {
            var lastChild = ingredientsList.lastChild;
            ingredientsList.removeChild(lastChild);
            counter--;
            if (counter==1) {
                document.getElementById("removeIngredientButton").style.display = "none";
            }
        }

    }
    function validateForm() {
        var x = document.forms["mealCreateForm"]["name"].value;
        var y = document.getElementById("buttonDiv");
        if (x == null || x == "") {
            alert("Naziv jela mora se popuniti");
            return false;
        }
        for (var i = 1; i < counter; i++) {
            if (document.getElementById("ingredient_"+ i).value=="-1") {
                alert("Sastojak se mora odabrati");
                return false;
            }
        }
        x.style.display = "none";
        y.style.display = "inherit";
        counter = 1;
    }
    function validateEditForm() {
        var x = document.forms["mealEditForm"]["nameEdit"].value;
        var y = document.getElementById("buttonDiv");
        if (x == null || x == "") {
            alert("Naziv jela mora se popuniti");
            return false;
        }
        for (var i = 1; i < counter; i++) {
            if (document.getElementById("ingredient_"+ i).value=="-1") {
                alert("Sastojak se mora odabrati");
                return false;
            }
        }
        x.style.display = "none";
        y.style.display = "inherit";
        counter = 1;
    }
    function toggleForm() {
        var x = document.getElementById("createFormDiv");
        var y = document.getElementById("buttonDiv");
        if (x.style.display == "none") {
            x.style.display = "inherit";
            y.style.display = "none";
        }
        else {
            x.style.display = "none";
            y.style.display = "inherit";
        }
    }
    function closeEditForm() {
        var x = document.getElementById("editFormDiv");
        var y = document.getElementById("buttonDiv");
        x.style.display = "none";
        y.style.display = "inherit";
    }
    function populateAndShowForm(name, id, mealIngredientQuantites) {
        var x = document.getElementById("editFormDiv");
        var y = document.getElementById("buttonDiv");
        var z = document.getElementById("createFormDiv");
        if (!(z.style.display == "none")) {
            z.style.display = "none";
        }
        x.style.display = "inherit";
        y.style.display = "none";
        document.getElementById("nameEdit").value = name;
        document.getElementById("idEdit").value = id;
        mealIngredientQuantites = mealIngredientQuantites.substring(0, mealIngredientQuantites.length - 1);
        mealIngredientQuantites = "{\"ingredients\": [" + mealIngredientQuantites + "]}";
        var mealIngredientQuantitesObj = JSON.parse(mealIngredientQuantites);
        console.log(mealIngredientQuantitesObj);
    }
</script>
